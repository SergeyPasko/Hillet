package lesson34.entity;
// Generated 13 Mar 2023, 17:53:22 by Hibernate Tools 4.3.5.Final

import jakarta.persistence.AttributeOverride;
import jakarta.persistence.AttributeOverrides;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * Payments generated by hbm2java
 */
@Entity
@Table(name = "payments", catalog = "classicmodels")
public class Payment {

    private PaymentId id;
    private Customer customer;
    private LocalDateTime paymentDate;
    private BigDecimal amount;

    public Payment() {
    }

    public Payment(PaymentId id, Customer customer, LocalDateTime paymentDate, BigDecimal amount) {
        this.id = id;
        this.customer = customer;
        this.paymentDate = paymentDate;
        this.amount = amount;
    }

    @EmbeddedId

    @AttributeOverrides({
            @AttributeOverride(name = "customerNumber", column = @Column(name = "customerNumber", nullable = false)),
            @AttributeOverride(name = "checkNumber", column = @Column(name = "checkNumber", nullable = false, length = 50))})
    public PaymentId getId() {
        return this.id;
    }

    public void setId(PaymentId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "customerNumber", nullable = false, insertable = false, updatable = false)
    public Customer getCustomer() {
        return this.customer;
    }

    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

    @Column(name = "paymentDate", nullable = false, length = 10)
    public LocalDateTime getPaymentDate() {
        return this.paymentDate;
    }

    public void setPaymentDate(LocalDateTime paymentDate) {
        this.paymentDate = paymentDate;
    }

    @Column(name = "amount", nullable = false, precision = 10)
    public BigDecimal getAmount() {
        return this.amount;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

}
