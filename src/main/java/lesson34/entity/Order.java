package lesson34.entity;
// Generated 13 Mar 2023, 17:53:22 by Hibernate Tools 4.3.5.Final

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "orders", catalog = "classicmodels")
public class Order {

    private int orderNumber;
    private Customer customer;
    private Date orderDate;
    private Date requiredDate;
    private Date shippedDate;
    private String status;
    private String comments;
    private Set<Product> product = new HashSet<>(0);

    public Order() {
    }

    public Order(int orderNumber, Customer customer, Date orderDate, Date requiredDate, String status) {
        this.orderNumber = orderNumber;
        this.customer = customer;
        this.orderDate = orderDate;
        this.requiredDate = requiredDate;
        this.status = status;
    }

    public Order(int orderNumber, Customer customer, Date orderDate, Date requiredDate, Date shippedDate,
            String status, String comments, Set<Product> product) {
        this.orderNumber = orderNumber;
        this.customer = customer;
        this.orderDate = orderDate;
        this.requiredDate = requiredDate;
        this.shippedDate = shippedDate;
        this.status = status;
        this.comments = comments;
        this.product = product;
    }

    @Id

    @Column(name = "orderNumber", unique = true, nullable = false)
    public int getOrderNumber() {
        return this.orderNumber;
    }

    public void setOrderNumber(int orderNumber) {
        this.orderNumber = orderNumber;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "customerNumber", nullable = false)
    public Customer getCustomer() {
        return this.customer;
    }

    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "orderDate", nullable = false, length = 10)
    public Date getOrderDate() {
        return this.orderDate;
    }

    public void setOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "requiredDate", nullable = false, length = 10)
    public Date getRequiredDate() {
        return this.requiredDate;
    }

    public void setRequiredDate(Date requiredDate) {
        this.requiredDate = requiredDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "shippedDate", length = 10)
    public Date getShippedDate() {
        return this.shippedDate;
    }

    public void setShippedDate(Date shippedDate) {
        this.shippedDate = shippedDate;
    }

    @Column(name = "status", nullable = false, length = 15)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Column(name = "comments", length = 65535)
    public String getComments() {
        return this.comments;
    }

    public void setComments(String comments) {
        this.comments = comments;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "orderdetails", catalog = "classicmodels", joinColumns = {
            @JoinColumn(name = "orderNumber", nullable = false, updatable = false)}, inverseJoinColumns = {
                    @JoinColumn(name = "productCode", nullable = false, updatable = false)})
    public Set<Product> getProducts() {
        return this.product;
    }

    public void setProducts(Set<Product> product) {
        this.product = product;
    }

}
